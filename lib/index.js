// Generated by CoffeeScript 1.9.0
(function() {
  var BunyanLumberjackStream, Writable, bunyan, levels, lumberjack,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    __hasProp = {}.hasOwnProperty;

  Writable = require('stream').Writable;

  lumberjack = require('lumberjack-protocol');

  bunyan = require('bunyan');

  levels = {
    10: 'trace',
    20: 'debug',
    30: 'info',
    40: 'warn',
    50: 'error',
    60: 'fatal'
  };

  BunyanLumberjackStream = (function(_super) {
    __extends(BunyanLumberjackStream, _super);

    function BunyanLumberjackStream(tlsOptions, lumberjackOptions, options) {
      var _ref, _ref1, _ref2;
      if (lumberjackOptions == null) {
        lumberjackOptions = {};
      }
      if (options == null) {
        options = {};
      }
      BunyanLumberjackStream.__super__.constructor.call(this, {
        objectMode: true
      });
      this._client = lumberjack.client(tlsOptions, lumberjackOptions);
      this._client.on('connect', (function(_this) {
        return function(count) {
          return _this.emit('connect', count);
        };
      })(this));
      this._client.on('dropped', (function(_this) {
        return function(count) {
          return _this.emit('dropped', count);
        };
      })(this));
      this._client.on('disconnect', (function(_this) {
        return function(err) {
          return _this.emit('disconnect', err);
        };
      })(this));
      this._host = require('os').hostname();
      this._tags = (_ref = options.tags) != null ? _ref : ['bunyan'];
      this._type = (_ref1 = options.type) != null ? _ref1 : 'json';
      this._application = (_ref2 = options.appName) != null ? _ref2 : process.title;
      this.on('finish', (function(_this) {
        return function() {
          return _this._client.close();
        };
      })(this));
    }

    BunyanLumberjackStream.prototype._write = function(entry, encoding, done) {
      var bunyanLevel, dataFrame, host, _ref, _ref1;
      entry = JSON.parse(entry);
      host = (_ref = entry.hostname) != null ? _ref : this._host;
      bunyanLevel = entry.level;
      entry.level = levels[entry.level];
      entry.message = (_ref1 = entry.msg) != null ? _ref1 : '';
      delete entry.msg;
      if (entry.time != null) {
        entry['@timestamp'] = entry.time.toISOString();
        delete entry.time;
      }
      delete entry.v;
      if (entry.tags == null) {
        entry.tags = this._tags;
      }
      entry.source = host + "/" + this._application;
      dataFrame = {
        line: JSON.stringify(entry),
        host: host,
        bunyanLevel: bunyanLevel
      };
      if (this._type != null) {
        dataFrame.type = this._type;
      }
      this._client.writeDataFrame(dataFrame);
      return done();
    };

    return BunyanLumberjackStream;

  })(Writable);

  module.exports = function(options) {
    if (options == null) {
      options = {};
    }
    return new BunyanLumberjackStream(options.tlsOptions, options.lumberjackOptions, options);
  };

}).call(this);
